# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 300mm BigTreeTech OctoPus V1.1 TMC2240 SPI config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

#####################################################################
#   Uncomment for ADXL funtion.
#####################################################################

#[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]
[include adxlmcu.cfg]
[include Macros.cfg]
[include sensorless.cfg]
[include stealthburner_leds.cfg]
[include KAMP_Settings.cfg]
[include nevermore.cfg]
[include TEST_SPEED.cfg]
[include K-ShakeTune/*.cfg]
[include config_backup.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1D0034000251313133353932-if00
restart_method: command
##--------------------------------------------------------------------

#####################################################################
#   BTT-Pi Section
#####################################################################

[mcu host]
serial: /tmp/klipper_host_mcu

#[temperature_fan raspberry_pi]
#pin: host:gpio211
#kick_start_time: 0.8
#off_below: 0.1
#max_power: 1.0
#fan_speed: 0.6
#sensor_type: temperature_host
#control: pid
#min_temp: 0
#max_temp: 85

#pid_kp: 1.0
#pid_ki: 0.5
#pid_kd: 2.0
#min_speed: 0.1
#max_speed: 0.6
#target_temp: 38

#####################################################################
#   Printer Section
#####################################################################

[printer]
kinematics: corexy
max_velocity: 350    #Stock:300  max 700
max_accel: 5000     #Stock5000  max 11000
#max_accel_to_decel: 3500
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   Inputshaper
#####################################################################

[input_shaper]
shaper_freq_x: 62
shaper_type_x: mzv
shaper_freq_y: 42
shaper_type_y: mzv

#####################################################################
#   Endstop Check
#####################################################################

#[endstop_phase]

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2240_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 300
position_max: 301

##--------------------------------------------------------------------
homing_speed: 45   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 2240)

[tmc2240 stepper_x]
interpolate: False
cs_pin: PC4
spi_speed: 500000
spi_bus: spi1
run_current: 1
stealthchop_threshold: 0
diag0_pin: ^!PG6
driver_SGT: 2

#[tmc2240 stepper_x]
#cs_pin:
#   The pin corresponding to the TMC2240 chip select line. This pin
#   will be set to low at the start of SPI messages and raised to high
#   after the message completes. This parameter must be provided.
#spi_speed:
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#uart_pin:
#   The pin connected to the TMC2240 DIAG1/SW line. If this parameter
#   is provided UART communication is used rather then SPI.
#chain_position:
#chain_length:
#   These parameters configure an SPI daisy chain. The two parameters
#   define the stepper position in the chain and the total chain length.
#   Position 1 corresponds to the stepper that connects to the MOSI signal.
#   The default is to not use an SPI daisy chain.
#interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). The default is True.
#run_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided.
#hold_current:
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
#rref: 12000
#   The resistance (in ohms) of the resistor between IREF and GND. The
#   default is 12000.
#stealthchop_threshold: 0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
#driver_MSLUT0: 2863314260
#driver_MSLUT1: 1251300522
#driver_MSLUT2: 608774441
#driver_MSLUT3: 269500962
#driver_MSLUT4: 4227858431
#driver_MSLUT5: 3048961917
#driver_MSLUT6: 1227445590
#driver_MSLUT7: 4211234
#driver_W0: 2
#driver_W1: 1
#driver_W2: 1
#driver_W3: 1
#driver_X1: 128
#driver_X2: 255
#driver_X3: 255
#driver_START_SIN: 0
#driver_START_SIN90: 247
#driver_OFFSET_SIN90: 0
#   These fields control the Microstep Table registers directly. The optimal
#   wave table is specific to each motor and might vary with current. An
#   optimal configuration will have minimal print artifacts caused by
#   non-linear stepper movement. The values specified above are the default
#   values used by the driver. The value must be specified as a decimal integer
#   (hex form is not supported). In order to compute the wave table fields,
#   see the tmc2130 "Calculation Sheet" from the Trinamic website.
#   Additionally, this driver also has the OFFSET_SIN90 field which can be used
#   to tune a motor with unbalanced coils. See the `Sine Wave Lookup Table`
#   section in the datasheet for information about this field and how to tune
#   it.
#driver_MULTISTEP_FILT: True
#driver_IHOLDDELAY: 6
#driver_IRUNDELAY: 4
#driver_TPOWERDOWN: 10
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 2
#driver_HSTRT: 5
#driver_FD3: 0
#driver_TPFD: 4
#driver_CHM: 0
#driver_VHIGHFS: 0
#driver_VHIGHCHM: 0
#driver_DISS2G: 0
#driver_DISS2VS: 0
#driver_PWM_AUTOSCALE: True
#driver_PWM_AUTOGRAD: True
#driver_PWM_FREQ: 0
#driver_FREEWHEEL: 0
#driver_PWM_GRAD: 0
#driver_PWM_OFS: 29
#driver_PWM_REG: 4
#driver_PWM_LIM: 12
#driver_SGT: 0
#driver_SEMIN: 0
#driver_SEUP: 0
#driver_SEMAX: 0
#driver_SEDN: 0
#driver_SEIMIN: 0
#driver_SFILT: 0
#driver_SG4_ANGLE_OFFSET: 1
#   Set the given register during the configuration of the TMC2240
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag0_pin:
#diag1_pin:
#   The micro-controller pin attached to one of the DIAG lines of the
#   TMC2240 chip. Only a single diag pin should be specified. The pin
#   is "active low" and is thus normally prefaced with "^!". Setting
#   this creates a "tmc2240_stepper_x:virtual_endstop" virtual pin
#   which may be used as the stepper's endstop_pin. Doing this enables
#   "sensorless homing". (Be sure to also set driver_SGT to an
#   appropriate sensitivity value.) The default is to not enable
#   sensorless homing.

##--------------------------------------------------------------------

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2240_stepper_y:virtual_endstop
position_min: -6
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 306
position_max: 308

##--------------------------------------------------------------------
homing_speed: 45  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 2240)

[tmc2240 stepper_y]
cs_pin: PD11
spi_bus: spi1
spi_speed: 500000
interpolate: False
run_current: 1
stealthchop_threshold: 0
diag0_pin: ^!PG9
driver_SGT: 1
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4    
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 245
position_min: -2.5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max. Stock 8
second_homing_speed: 3
homing_retract_dist: 3


[tmc2240 stepper_z]
cs_pin: PC6
spi_bus: spi1
spi_speed: 500000
interpolate: False
run_current: 0.8
stealthchop_threshold: 999999
diag0_pin: !PG10

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32


[tmc2240 stepper_z1]
cs_pin: PC7
spi_bus: spi1
spi_speed: 500000
interpolate: False
run_current: 0.8
stealthchop_threshold: 999999
diag0_pin: !PG11

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4  
microsteps: 32


[tmc2240 stepper_z2]
cs_pin: PF2
spi_bus: spi1
spi_speed: 500000
interpolate: False
run_current: 0.8
stealthchop_threshold: 999999
diag0_pin: !PG12

#####################################################################
#   TMC AUTO-Tune
#####################################################################

[motor_constants oukeda-OK42HC40-204A306N84]
# Coil resistance, Ohms
resistance: 1.1
# Coil inductance, Henries
inductance: 0.0026
# Holding torque, Nm
holding_torque: 0.45
# Nominal rated current, Amps
max_current: 2.00
# Steps per revolution (1.8deg motors use 200, 0.9deg motors use 400)
steps_per_revolution: 200

[autotune_tmc stepper_x]
motor: moons-ms17hd6p420I-05
tuning_goal: auto
voltage: 24
sgt: 2
sg4_thrs: 80

[autotune_tmc stepper_y]
motor: moons-ms17hd6p420I-05
tuning_goal: auto
voltage: 24
sgt: 1
sg4_thrs: 80

[autotune_tmc stepper_z]
motor: oukeda-OK42HC40-204A306N84
tuning_goal: silent
voltage: 24

[autotune_tmc stepper_z1]
motor: oukeda-OK42HC40-204A306N84
tuning_goal: silent
voltage: 24

[autotune_tmc stepper_z2]
motor: oukeda-OK42HC40-204A306N84
tuning_goal: silent
voltage: 24

#[autotune_tmc extruder]
#motor: ldo-36sth20-1004ahg
#tuning_goal: silent
#voltage: 24


#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
rotation_distance: 4.683    #Orbiter2.0 mit ldo-36sth20-1004ahg]
#rotation_distance: 4.637     #Stock Rotation Distance
#resistance: 2.1
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
#gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G #ATC Semitec 104NT-4-R025H42G; Generic 3950
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
max_extrude_cross_section: 5
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.000
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.030

##  E0 on MOTOR6

[tmc2240 extruder]
cs_pin: PE1
spi_bus: spi1
spi_speed: 500000
interpolate: False
run_current: 0.8
stealthchop_threshold: 999999
diag0_pin: !PG14
#driver_SGT: 1

[firmware_retraction]
retract_length: 0.4
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 120
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 110
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#####################################################################
#   Filament_Sensor (BTT SFS 2.0)
#####################################################################

[filament_switch_sensor switch_sensor]
switch_pin: ^PG10
pause_on_runout: False
runout_gcode:
    LCDRGB R=1 G=0 B=0  ; Turn LCD red
    PAUSE                ; Pause
  M117 Filament switch runout
insert_gcode:
  M117 Filament switch inserted

[filament_motion_sensor encoder_sensor]
switch_pin: ^PG11
detection_length: 4.88
extruder: extruder
pause_on_runout: False
runout_gcode:
  LCDRGB R=1 G=0 B=0  ; Turn LCD red
  PAUSE                ; Pause
  M117 Filament encoder runout
insert_gcode:
  M117 Filament encoder inserted

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1 ; Put your filament sensor's name after SENSOR=
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0



#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Auto_Tap
#####################################################################

[auto_tap]
tap_version: VITALII_CNC       ; Set during the first part of configuration
x: 150                      ; X position to probe, Defaults to the middle of the x axis `(max - min)/2`
y: 150                      ; Y position to probe, Defaults to the middle of the y axis `(max - min)/2`
z: 8                       ; Z position to park
probe_to: -2                ; Lower probe until it triggers, or reaches this value
set: True                   ; Set probe offset after calculation
settling_probe: True        ; Perform a dummy probe before starting
stop: 2.0                   ; Lift Z up to this amount for TAP to de-actuate
step: 0.005                ; Lift Z by this amount each check
samples: 3                  ; Number of samples to take, Defaults to your config's probe sample count
retract: 3                 ; Lift up by this amount at end, Defaults to your config's probe retract distance
probe_speed: 1          ; Probe at this speed, Defaults to your config's probe travel speed
lift_speed: 3              ; Retract at this speed, Defaults to your config's probe lift speed
travel_speed: 80           ; Speed for travel to park position

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

##  Voron Tap Probing -> OCTO-Tap V2.4.1 24V
pin: PG15   ###############################Change to ^can0:LIMIT_1 when using EBB36 toolhead!!!!!!!!!!!!!!!!!!!

# Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: PG15
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0
#z_offset: 0   # Alter Wert von unten: self_measured_z_offset = -0.789
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 5

#--------------------------------------------------------------------
## G-Code for cold probing with Voron Tap

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Bed Mesh
#####################################################################

[bed_mesh]
speed: 150         #Stock 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260

##	Uncomment for 350mm build
#mesh_min: 40, 40
#mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
zero_reference_position: 150, 150


#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan intake - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed

[controller_fan controller_fan2]
##  Controller fan exhaust - FAN3
pin: PD13
kick_start_time: 0.5
heater: heater_bed

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN
#pin: 
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 70
#fan_speed: 1.0

#####################################################################
#   Chamber Temp Sensor
#####################################################################

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp: 100

#####################################################################
#   Thermals
#####################################################################

[temperature_sensor btt pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

[homing_override]
axes: xyz
gcode:     
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  SET_KINEMATIC_POSITION Z=0
    G0 Z10
  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G0 X150 Y150 F5000
    G28 Z
    G1 Z10
  {% endif %}

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:150,150
#speed:100
#z_hop:10

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5
   
##--------------------------------------------------------------------

speed: 150 #Stock 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_bus: spi1
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        RESETRGB

#--------------------------------------------------------------------

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.300
#*# pid_ki = 1.287
#*# pid_kd = 72.376
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.210
#*# pid_ki = 1.731
#*# pid_kd = 222.026
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.021185, -0.005690, -0.011940
#*# 	  0.025560, -0.000065, -0.015690
#*# 	  0.027435, 0.004935, -0.016940
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 105.39
#*# max_x = 195.59
#*# min_y = 105.42
#*# max_y = 197.58
#*#
#*# [probe]
#*# z_offset = -0.709
